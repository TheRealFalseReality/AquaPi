substitutions:
  # names
  name: "aquapi"
  friendly_name: "AquaPi"

  # App Version - Updated: 6/2023
  appVersion: "1.15.35"

  # pins
  dallasPin: "4"
  opticalHighPin: "33"
  opticalLowPin: "32"
  sdaPin: "21"
  sclPin: "22"
  
  # EZO Circuit Addresses
  # pH circuit, who's address is 99
  addPH: "99"
  # EC circuit, who's address is 100
  addEC: "100"
  # DO circuit, who's address is 97
  addDO: "97"
  # RTD circuit, who's address is 102
  addRTD: "102"
  # PMP circuit, who's address is 103
  addPMP: "103"
  # HUM circuit, who's address is 111
  addHUM: "111"
  # PMP circuit, who's address is 103
  addCO2: "105"


esphome:
  name: "${name}"
  friendly_name: "${friendly_name}"
  # Automatically add the mac address to the name
  name_add_mac_suffix: true
  project:
    name: TheRealFalseReality.aquapi
    version: "${appVersion}"

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:
  # level: verbose

# Enable Home Assistant API
api:

ota:

dashboard_import:
  package_import_url: github://TheRealFalseReality/aquapi/aquapi_config.yaml@main
  # import_full_config: true

wifi:
  ap:
    password: "password"

captive_portal:

# Sets up Bluetooth LE (Only on ESP32) to allow the user
# to provision wifi credentials to the device.
esp32_improv:
  authorizer: none
  
improv_serial:

# i2c Pins
i2c:
  sda: ${sdaPin}
  scl: ${sclPin}
  scan: true
  id: bus_a

# Internal Blue LED
light:
  - platform: status_led
    name: "Internal LED"
    pin: GPIO2
    entity_category: "Config"

# 18B20 sensor Pin
dallas:
  - pin: ${dallasPin}
    
sensor:
  # Internal Magnetic Sensor
  - platform: esp32_hall
    name: "ESP32 Hall Sensor"
    update_interval: 60s
    entity_category: "diagnostic"

  # Internal Temp.
  - platform: internal_temperature
    name: "Internal Temperature"

  # Wifi Signal 
  - platform: wifi_signal # Reports the WiFi signal strength/RSSI in dB
    name: "WiFi Signal dB"
    id: wifi_signal_db
    update_interval: 60s
    entity_category: "diagnostic"

  # Wifi %
  - platform: copy # Reports the WiFi signal strength in %
    source_id: wifi_signal_db
    name: "WiFi Signal"
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "%"
    entity_category: "diagnostic"

  # Uptime sensor
  - platform: uptime
    name: Uptime

  # EZO Circuits (yellow - SCL/RX, blue - SDA/TX)
  # EZO Circuit - pH
  - platform: ezo
    icon: mdi:ph
    name: "pH"
    id: ph_ezo
    address: ${addPH}
    unit_of_measurement: ""
    accuracy_decimals: 2
    update_interval: 60s
    state_class: "measurement"

  # EZO Circuit - EC
  # Salinity
  - platform: ezo
    icon: mdi:shaker-outline
    name: "Salinity"
    id: ec_ezo
    address: ${addEC}
    unit_of_measurement: "ppt"
    accuracy_decimals: 2
    update_interval: 60s
    state_class: "measurement"

  # Specific Gravity
  - platform: copy 
    source_id: ec_ezo
    name: "Specific Gravity"
    filters:
      - lambda: return x;
    unit_of_measurement: ""
    accuracy_decimals: 3
    state_class: "measurement"

  # Conductivity
  - platform: copy 
    source_id: ec_ezo
    name: "Conductivity"
    icon: mdi:flash
    filters:
      - lambda: return x;
    unit_of_measurement: "μS/cm"
    accuracy_decimals: 3
    state_class: "measurement"
    disabled_by_default: true

  # # EZO Circuit - RTD
  # # Temperature
  # - platform: ezo
  #   icon: mdi:thermometer-lines
  #   name: "Temperature"
  #   id: temp_ezo
  #   address: ${addRTD}
  #   # unit_of_measurement: "°C"
  #   accuracy_decimals: 2
  #   update_interval: 60s
  #   state_class: "measurement"
  #   device_class: "temperature"

  # # EZO Circuit - HUM
  # # Humidity
  # - platform: ezo
  #   icon: mdi:water-percent
  #   name: "Humidity"
  #   id: hum_ezo
  #   address: ${addHUM}
  #   # unit_of_measurement: "%"
  #   accuracy_decimals: 2
  #   update_interval: 60s
  #   state_class: "measurement"
  #   device_class: "humidity"

  # # EZO Circuit - CO2
  # # Cardbon Dioxide
  # - platform: ezo
  #   icon: mdi:molecule-co2
  #   name: "Cardbon Dioxide"
  #   id: co2_ezo
  #   address: ${addCO2}
  #   # unit_of_measurement: "ppm"
  #   accuracy_decimals: 2
  #   update_interval: 60s
  #   state_class: "measurement"
  #   device_class: "carbon_dioxide"

  # EZO Circuit - Dissolved Oxygen
  - platform: ezo
    icon: mdi:molecule
    name: "Dissolved Oxygen"
    id: do_ezo
    address: ${addDO}
    unit_of_measurement: "mg/L"
    accuracy_decimals: 2
    update_interval: 60s
    state_class: "measurement"
    disabled_by_default: true

  # EZO Circuit - Pump
  - platform: ezo
    icon: mdi:pump
    name: "Pump"
    id: pmp_ezo
    address: ${addPMP}
    unit_of_measurement: ""
    accuracy_decimals: 2
    update_interval: 60s
    state_class: "measurement"
    disabled_by_default: true

  # # DHT
  # - platform: absolute_humidity
  #   name: Absolute Humidity
  #   temperature: air_temperature
  #   humidity: relative_humidity

  # # - platform: dht
  #   pin: 5
  #   temperature:
  #     name: "Temperature"
  #     id: air_temperature
  #   humidity:
  #     name: "Humidity"
  #     id: relative_humidity
  #   update_interval: 60s

  # Temperature Probes
  - platform: dallas
    icon: mdi:thermometer-lines
    # address: 0xe58000003203d628
    index: 0
    name: "Temperature"

  - platform: dallas
    icon: mdi:thermometer-lines
    # address: 0xe58000003203d628
    index: 1
    name: "Temperature 2"

binary_sensor:
  # Optical Sensor - LOW (yellow)
  - platform: gpio
    id: os_low
    pin: 
      number: ${opticalLowPin}
      inverted: true
      mode:
        input: true
        pullup: true
    name: "Optical Sensor: Low"
    filters:
      - delayed_on: 30ms

  # Optical Sensor - HIGH (blue)
  - platform: gpio
    id: os_high
    pin: 
      number: ${opticalHighPin}
      inverted: true
      mode:
        input: true
        pullup: true
    name: "Optical Sensor: High"
    filters:
      - delayed_on: 30ms

text_sensor: 
  # Hostname
  - platform: template
    name: "Hostname"
    id: hostname
    icon: mdi:cellphone-arrow-down
    update_interval: 600s
    lambda: |-
      return {"${name}"};
    entity_category: "diagnostic"

  # AquaPi Version
  - platform: template
    name: "AquaPi Version"
    id: aquapi_version
    icon: mdi:update
    update_interval: 600s
    lambda: |-
      return {"${appVersion}"};
    entity_category: "diagnostic"

  # Water Level
  - platform: template
    icon: mdi:waves-arrow-up
    name: "Water Level"
    id: water_level
    lambda: |-
      if(id(os_high).state == true && id(os_low).state == true) {
        // Water Level is High
        return {"High"};
      }
      if(id(os_high).state == false && id(os_low).state == false) {
        // Water Level is Low
        return {"Low"};
      }
      if(id(os_high).state == false && id(os_low).state == true) {
        // Water Level is Normal
        return {"Normal"};
      } else {
        return {"Uknown or Error"};
      }

  - platform: wifi_info
    ip_address:
      name: IP Address
      icon: mdi:ip-network
    ssid:
      name: Connected SSID
      icon: mdi:wifi-star
    bssid:
      name: Connected BSSID
      icon: mdi:wifi-star
    mac_address:
      name: Mac Address
      icon: mdi:chip

button:
  # Soft Restart
  - platform: restart
    name: "Restart"

  # EC
  # Output Parameters
  # Output Salinity
  - platform: template
    name: "EC - Output - Salinity"
    id: ec_sal
    on_press:
      then:
        - lambda: |-
            id(ec_ezo).send_custom("O,EC,0");
            id(ec_ezo).send_custom("O,TDS,0");
            id(ec_ezo).send_custom("O,S,1");
            id(ec_ezo).send_custom("O,SG,0");
    entity_category: "Config"
            
  # Output Specific Gravity
  - platform: template
    name: "EC - Output - Specific Gravity"
    id: ec_sg
    on_press:
      then:
        - lambda: |-
            id(ec_ezo).send_custom("O,EC,0");
            id(ec_ezo).send_custom("O,TDS,0");
            id(ec_ezo).send_custom("O,S,0");
            id(ec_ezo).send_custom("O,SG,1");
    entity_category: "Config"

  # Output Conductivity
  - platform: template
    name: "EC - Output - Conductivity"
    id: ec_cond
    on_press:
      then:
        - lambda: |-
            id(ec_ezo).send_custom("O,EC,1");
            id(ec_ezo).send_custom("O,TDS,0");
            id(ec_ezo).send_custom("O,S,0");
            id(ec_ezo).send_custom("O,SG,0");
    entity_category: "Config"
